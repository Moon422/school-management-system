// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
  TEACHER
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  role     Role
  Student  Student?
  Teacher  Teacher?
}

model Class {
  id       Int       @id @default(autoincrement())
  name     String
  students Student[]
}

model Course {
  id        Int     @id @default(autoincrement())
  name      String
  teacherId Int
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  Grade     Grade[]
}

model Grade {
  id        Int     @id @default(autoincrement())
  studentId Int
  courseId  Int
  value     Float
  student   Student @relation(fields: [studentId], references: [id])
  course    Course  @relation(fields: [courseId], references: [id])
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  EXCUSED
}

model Attendance {
  id        Int              @id @default(autoincrement())
  studentId Int
  date      DateTime
  status    AttendanceStatus
  student   Student          @relation(fields: [studentId], references: [id])
}

model Student {
  id         Int          @id @default(autoincrement())
  userId     Int          @unique
  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  classId    Int
  class      Class        @relation(fields: [classId], references: [id])
  grades     Grade[]
  attendance Attendance[]
}

model Teacher {
  id      Int      @id @default(autoincrement())
  userId  Int      @unique
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  courses Course[]
}
